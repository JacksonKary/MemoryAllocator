* (TEST 10) Stress 1
COMMENTS:
** program: ./test_el_malloc "Stress 1"

** --- Failure messages --- 
- FAILURE(139) due to SIGSEGV (segmentation fault) from OS
- FAILURE: Output Mismatch at lines marked

** --- Side by Side Differences ---
- Expect output in: test-results/raw/el_malloc-10-expect.tmp
- Actual output in: test-results/raw/el_malloc-10-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
#+BEGIN_SRC sbs-diff
==== EXPECT ====                                                         ==== ACTUAL ====                                                      
{                                                                        {
    // Stress testing with many malloc()'s / free()'s. More thoroughly       // Stress testing with many malloc()'s / free()'s. More thoroughly
    // tests combinations of calls and sequences. Implementations that       // tests combinations of calls and sequences. Implementations that
    // may have appeared correct in simple tests may buckle under such       // may have appeared correct in simple tests may buckle under such
    // added stress.                                                         // added stress.

    void *ptr[16] = {};                                                      void *ptr[16] = {};
    int len = 0;                                                             int len = 0;

    ptr[len++] = el_malloc(128);                                             ptr[len++] = el_malloc(128);
    ptr[len++] = el_malloc(256);                                             ptr[len++] = el_malloc(256);
    ptr[len++] = el_malloc(64);                                              ptr[len++] = el_malloc(64);
    ptr[len++] = el_malloc(200);                                             ptr[len++] = el_malloc(200);
    printf("MALLOC 1-4\n"); el_print_stats(); printf("\n");                  printf("MALLOC 1-4\n"); el_print_stats(); printf("\n");
    printf("POINTERS\n"); print_ptrs(ptr, len);                              printf("POINTERS\n"); print_ptrs(ptr, len);

    el_free(ptr[2]);    ptr[2] = NULL;                                       el_free(ptr[2]);    ptr[2] = NULL;
    printf("\nFREE 2\n"); el_print_stats(); printf("\n");                    printf("\nFREE 2\n"); el_print_stats(); printf("\n");
    printf("POINTERS\n"); print_ptrs(ptr, len);                              printf("POINTERS\n"); print_ptrs(ptr, len);

    ptr[len++] = el_malloc(64);                                              ptr[len++] = el_malloc(64);
    printf("\nMALLOC 5\n"); el_print_stats(); printf("\n");                  printf("\nMALLOC 5\n"); el_print_stats(); printf("\n");
    printf("POINTERS\n"); print_ptrs(ptr, len);                              printf("POINTERS\n"); print_ptrs(ptr, len);

    el_free(ptr[1]);    ptr[1] = NULL;                                       el_free(ptr[1]);    ptr[1] = NULL;
    printf("\nFREE 1\n"); el_print_stats(); printf("\n");                    printf("\nFREE 1\n"); el_print_stats(); printf("\n");
    printf("POINTERS\n"); print_ptrs(ptr, len);                              printf("POINTERS\n"); print_ptrs(ptr, len);

    ptr[len++] = el_malloc(50);                                              ptr[len++] = el_malloc(50);
    ptr[len++] = el_malloc(50);                                              ptr[len++] = el_malloc(50);
    printf("\nMALLOC 6-7\n"); el_print_stats(); printf("\n");                printf("\nMALLOC 6-7\n"); el_print_stats(); printf("\n");
    printf("POINTERS\n"); print_ptrs(ptr, len);                              printf("POINTERS\n"); print_ptrs(ptr, len);

    ptr[len++] = el_malloc(100);                                             ptr[len++] = el_malloc(100);
    printf("\nMALLOC 8\n"); el_print_stats(); printf("\n");                  printf("\nMALLOC 8\n"); el_print_stats(); printf("\n");
    printf("POINTERS\n"); print_ptrs(ptr, len);                              printf("POINTERS\n"); print_ptrs(ptr, len);

    el_free(ptr[5]);   ptr[5] = NULL;                                        el_free(ptr[5]);   ptr[5] = NULL;
    el_free(ptr[0]);   ptr[0] = NULL;                                        el_free(ptr[0]);   ptr[0] = NULL;
    el_free(ptr[6]);   ptr[6] = NULL;                                        el_free(ptr[6]);   ptr[6] = NULL;
    printf("\nFREE 5,0,6\n"); el_print_stats(); printf("\n");                printf("\nFREE 5,0,6\n"); el_print_stats(); printf("\n");
    printf("POINTERS\n"); print_ptrs(ptr, len);                              printf("POINTERS\n"); print_ptrs(ptr, len);

    ptr[len++] = el_malloc(200);                                             ptr[len++] = el_malloc(200);
    ptr[len++] = el_malloc(512);                                             ptr[len++] = el_malloc(512);
    ptr[len++] = el_malloc(16);                                              ptr[len++] = el_malloc(16);
    ptr[len++] = el_malloc(32);                                              ptr[len++] = el_malloc(32);
    printf("\nMALLOC 9,10,11\n"); el_print_stats(); printf("\n");            printf("\nMALLOC 9,10,11\n"); el_print_stats(); printf("\n");
    printf("POINTERS\n"); print_ptrs(ptr, len);                              printf("POINTERS\n"); print_ptrs(ptr, len);
}                                                                        }
MALLOC 1-4                                                               MALLOC 1-4
HEAP STATS (overhead per node: 40)                                       HEAP STATS (overhead per node: 40)
heap_start:  0x612000000000                                              heap_start:  0x612000000000
heap_end:    0x612000001000                                              heap_end:    0x612000001000
total_bytes: 4096                                                        total_bytes: 4096
AVAILABLE LIST: {length:   1  bytes:  3288}                              AVAILABLE LIST: {length:   1  bytes:  3288}
  [  0] head @ 0x612000000328 {state: a  size:  3248}                      [  0] head @ 0x612000000328 {state: a  size:  3248}
USED LIST: {length:   4  bytes:   808}                                   USED LIST: {length:   4  bytes:   808}
  [  0] head @ 0x612000000238 {state: u  size:   200}                      [  0] head @ 0x612000000238 {state: u  size:   200}
  [  1] head @ 0x6120000001d0 {state: u  size:    64}                      [  1] head @ 0x6120000001d0 {state: u  size:    64}
  [  2] head @ 0x6120000000a8 {state: u  size:   256}                      [  2] head @ 0x6120000000a8 {state: u  size:   256}
  [  3] head @ 0x612000000000 {state: u  size:   128}                      [  3] head @ 0x612000000000 {state: u  size:   128}
HEAP BLOCKS:                                                             HEAP BLOCKS:
[  0] @ 0x612000000000                                                   [  0] @ 0x612000000000
  state:      u                                                            state:      u
  size:       128 (total: 0xa8)                                            size:       128 (total: 0xa8)
  prev:       0x6120000000a8                                               prev:       0x6120000000a8
  next:       0x610000000098                                               next:       0x610000000098
  user:       0x612000000020                                               user:       0x612000000020
  foot:       0x6120000000a0                                               foot:       0x6120000000a0
  foot->size: 128                                                          foot->size: 128
[  1] @ 0x6120000000a8                                                   [  1] @ 0x6120000000a8
  state:      u                                                            state:      u
  size:       256 (total: 0x128)                                           size:       256 (total: 0x128)
  prev:       0x6120000001d0                                               prev:       0x6120000001d0
  next:       0x612000000000                                               next:       0x612000000000
  user:       0x6120000000c8                                               user:       0x6120000000c8
  foot:       0x6120000001c8                                               foot:       0x6120000001c8
  foot->size: 256                                                          foot->size: 256
[  2] @ 0x6120000001d0                                                   [  2] @ 0x6120000001d0
  state:      u                                                            state:      u
  size:       64 (total: 0x68)                                             size:       64 (total: 0x68)
  prev:       0x612000000238                                               prev:       0x612000000238
  next:       0x6120000000a8                                               next:       0x6120000000a8
  user:       0x6120000001f0                                               user:       0x6120000001f0
  foot:       0x612000000230                                               foot:       0x612000000230
  foot->size: 64                                                           foot->size: 64
[  3] @ 0x612000000238                                                   [  3] @ 0x612000000238
  state:      u                                                            state:      u
  size:       200 (total: 0xf0)                                            size:       200 (total: 0xf0)
  prev:       0x610000000078                                               prev:       0x610000000078
  next:       0x6120000001d0                                               next:       0x6120000001d0
  user:       0x612000000258                                               user:       0x612000000258
  foot:       0x612000000320                                               foot:       0x612000000320
  foot->size: 200                                                          foot->size: 200
[  4] @ 0x612000000328                                                   [  4] @ 0x612000000328
  state:      a                                                            state:      a
  size:       3248 (total: 0xcd8)                                          size:       3248 (total: 0xcd8)
  prev:       0x610000000018                                               prev:       0x610000000018
  next:       0x610000000038                                               next:       0x610000000038
  user:       0x612000000348                                               user:       0x612000000348
  foot:       0x612000000ff8                                               foot:       0x612000000ff8
  foot->size: 3248                                                         foot->size: 3248

POINTERS                                                                 POINTERS
ptr[ 0]: 0x612000000020                                                  ptr[ 0]: 0x612000000020
ptr[ 1]: 0x6120000000c8                                                  ptr[ 1]: 0x6120000000c8
ptr[ 2]: 0x6120000001f0                                                  ptr[ 2]: 0x6120000001f0
ptr[ 3]: 0x612000000258                                                  ptr[ 3]: 0x612000000258

FREE 2                                                                   FREE 2
HEAP STATS (overhead per node: 40)                                       HEAP STATS (overhead per node: 40)
heap_start:  0x612000000000                                              heap_start:  0x612000000000
heap_end:    0x612000001000                                              heap_end:    0x612000001000
total_bytes: 4096                                                        total_bytes: 4096
AVAILABLE LIST: {length:   2  bytes:  3392}                              AVAILABLE LIST: {length:   2  bytes:  3392}
  [  0] head @ 0x6120000001d0 {state: a  size:    64}                      [  0] head @ 0x6120000001d0 {state: a  size:    64}
  [  1] head @ 0x612000000328 {state: a  size:  3248}                      [  1] head @ 0x612000000328 {state: a  size:  3248}
USED LIST: {length:   3  bytes:   704}                                   USED LIST: {length:   3  bytes:   704}
  [  0] head @ 0x612000000238 {state: u  size:   200}                      [  0] head @ 0x612000000238 {state: u  size:   200}
  [  1] head @ 0x6120000000a8 {state: u  size:   256}                      [  1] head @ 0x6120000000a8 {state: u  size:   256}
  [  2] head @ 0x612000000000 {state: u  size:   128}                      [  2] head @ 0x612000000000 {state: u  size:   128}
HEAP BLOCKS:                                                             HEAP BLOCKS:
[  0] @ 0x612000000000                                                   [  0] @ 0x612000000000
  state:      u                                                            state:      u
  size:       128 (total: 0xa8)                                            size:       128 (total: 0xa8)
  prev:       0x6120000000a8                                               prev:       0x6120000000a8
  next:       0x610000000098                                               next:       0x610000000098
  user:       0x612000000020                                               user:       0x612000000020
  foot:       0x6120000000a0                                               foot:       0x6120000000a0
  foot->size: 128                                                          foot->size: 128
[  1] @ 0x6120000000a8                                                   [  1] @ 0x6120000000a8
  state:      u                                                            state:      u
  size:       256 (total: 0x128)                                           size:       256 (total: 0x128)
  prev:       0x612000000238                                               prev:       0x612000000238
  next:       0x612000000000                                               next:       0x612000000000
  user:       0x6120000000c8                                               user:       0x6120000000c8
  foot:       0x6120000001c8                                               foot:       0x6120000001c8
  foot->size: 256                                                          foot->size: 256
[  2] @ 0x6120000001d0                                                   [  2] @ 0x6120000001d0
  state:      a                                                            state:      a
  size:       64 (total: 0x68)                                             size:       64 (total: 0x68)
  prev:       0x610000000018                                               prev:       0x610000000018
  next:       0x612000000328                                               next:       0x612000000328
  user:       0x6120000001f0                                               user:       0x6120000001f0
  foot:       0x612000000230                                               foot:       0x612000000230
  foot->size: 64                                                           foot->size: 64
[  3] @ 0x612000000238                                                   [  3] @ 0x612000000238
  state:      u                                                            state:      u
  size:       200 (total: 0xf0)                                            size:       200 (total: 0xf0)
  prev:       0x610000000078                                               prev:       0x610000000078
  next:       0x6120000000a8                                               next:       0x6120000000a8
  user:       0x612000000258                                               user:       0x612000000258
  foot:       0x612000000320                                               foot:       0x612000000320
  foot->size: 200                                                          foot->size: 200
[  4] @ 0x612000000328                                                   [  4] @ 0x612000000328
  state:      a                                                            state:      a
  size:       3248 (total: 0xcd8)                                          size:       3248 (total: 0xcd8)
  prev:       0x6120000001d0                                               prev:       0x6120000001d0
  next:       0x610000000038                                               next:       0x610000000038
  user:       0x612000000348                                               user:       0x612000000348
  foot:       0x612000000ff8                                               foot:       0x612000000ff8
  foot->size: 3248                                                         foot->size: 3248

POINTERS                                                                 POINTERS
ptr[ 0]: 0x612000000020                                                  ptr[ 0]: 0x612000000020
ptr[ 1]: 0x6120000000c8                                                  ptr[ 1]: 0x6120000000c8
ptr[ 2]: (nil)                                                           ptr[ 2]: (nil)
ptr[ 3]: 0x612000000258                                                  ptr[ 3]: 0x612000000258
                                                                       <
MALLOC 5                                                               <
HEAP STATS (overhead per node: 40)                                     <
heap_start:  0x612000000000                                            <
heap_end:    0x612000001000                                            <
total_bytes: 4096                                                      <
AVAILABLE LIST: {length:   1  bytes:  3288}                            <
  [  0] head @ 0x612000000328 {state: a  size:  3248}                  <
USED LIST: {length:   4  bytes:   808}                                 <
  [  0] head @ 0x6120000001d0 {state: u  size:    64}                  <
  [  1] head @ 0x612000000238 {state: u  size:   200}                  <
  [  2] head @ 0x6120000000a8 {state: u  size:   256}                  <
  [  3] head @ 0x612000000000 {state: u  size:   128}                  <
HEAP BLOCKS:                                                           <
[  0] @ 0x612000000000                                                 <
  state:      u                                                        <
  size:       128 (total: 0xa8)                                        <
  prev:       0x6120000000a8                                           <
  next:       0x610000000098                                           <
  user:       0x612000000020                                           <
  foot:       0x6120000000a0                                           <
  foot->size: 128                                                      <
[  1] @ 0x6120000000a8                                                 <
  state:      u                                                        <
  size:       256 (total: 0x128)                                       <
  prev:       0x612000000238                                           <
  next:       0x612000000000                                           <
  user:       0x6120000000c8                                           <
  foot:       0x6120000001c8                                           <
  foot->size: 256                                                      <
[  2] @ 0x6120000001d0                                                 <
  state:      u                                                        <
  size:       64 (total: 0x68)                                         <
  prev:       0x610000000078                                           <
  next:       0x612000000238                                           <
  user:       0x6120000001f0                                           <
  foot:       0x612000000230                                           <
  foot->size: 64                                                       <
[  3] @ 0x612000000238                                                 <
  state:      u                                                        <
  size:       200 (total: 0xf0)                                        <
  prev:       0x6120000001d0                                           <
  next:       0x6120000000a8                                           <
  user:       0x612000000258                                           <
  foot:       0x612000000320                                           <
  foot->size: 200                                                      <
[  4] @ 0x612000000328                                                 <
  state:      a                                                        <
  size:       3248 (total: 0xcd8)                                      <
  prev:       0x610000000018                                           <
  next:       0x610000000038                                           <
  user:       0x612000000348                                           <
  foot:       0x612000000ff8                                           <
  foot->size: 3248                                                     <
                                                                       <
POINTERS                                                               <
ptr[ 0]: 0x612000000020                                                <
ptr[ 1]: 0x6120000000c8                                                <
ptr[ 2]: (nil)                                                         <
ptr[ 3]: 0x612000000258                                                <
ptr[ 4]: 0x6120000001f0                                                <
                                                                       <
FREE 1                                                                 <
HEAP STATS (overhead per node: 40)                                     <
heap_start:  0x612000000000                                            <
heap_end:    0x612000001000                                            <
total_bytes: 4096                                                      <
AVAILABLE LIST: {length:   2  bytes:  3584}                            <
  [  0] head @ 0x6120000000a8 {state: a  size:   256}                  <
  [  1] head @ 0x612000000328 {state: a  size:  3248}                  <
USED LIST: {length:   3  bytes:   512}                                 <
  [  0] head @ 0x6120000001d0 {state: u  size:    64}                  <
  [  1] head @ 0x612000000238 {state: u  size:   200}                  <
  [  2] head @ 0x612000000000 {state: u  size:   128}                  <
HEAP BLOCKS:                                                           <
[  0] @ 0x612000000000                                                 <
  state:      u                                                        <
  size:       128 (total: 0xa8)                                        <
  prev:       0x612000000238                                           <
  next:       0x610000000098                                           <
  user:       0x612000000020                                           <
  foot:       0x6120000000a0                                           <
  foot->size: 128                                                      <
[  1] @ 0x6120000000a8                                                 <
  state:      a                                                        <
  size:       256 (total: 0x128)                                       <
  prev:       0x610000000018                                           <
  next:       0x612000000328                                           <
  user:       0x6120000000c8                                           <
  foot:       0x6120000001c8                                           <
  foot->size: 256                                                      <
[  2] @ 0x6120000001d0                                                 <
  state:      u                                                        <
  size:       64 (total: 0x68)                                         <
  prev:       0x610000000078                                           <
  next:       0x612000000238                                           <
  user:       0x6120000001f0                                           <
  foot:       0x612000000230                                           <
  foot->size: 64                                                       <
[  3] @ 0x612000000238                                                 <
  state:      u                                                        <
  size:       200 (total: 0xf0)                                        <
  prev:       0x6120000001d0                                           <
  next:       0x612000000000                                           <
  user:       0x612000000258                                           <
  foot:       0x612000000320                                           <
  foot->size: 200                                                      <
[  4] @ 0x612000000328                                                 <
  state:      a                                                        <
  size:       3248 (total: 0xcd8)                                      <
  prev:       0x6120000000a8                                           <
  next:       0x610000000038                                           <
  user:       0x612000000348                                           <
  foot:       0x612000000ff8                                           <
  foot->size: 3248                                                     <
                                                                       <
POINTERS                                                               <
ptr[ 0]: 0x612000000020                                                <
ptr[ 1]: (nil)                                                         <
ptr[ 2]: (nil)                                                         <
ptr[ 3]: 0x612000000258                                                <
ptr[ 4]: 0x6120000001f0                                                <
                                                                       <
MALLOC 6-7                                                             <
HEAP STATS (overhead per node: 40)                                     <
heap_start:  0x612000000000                                            <
heap_end:    0x612000001000                                            <
total_bytes: 4096                                                      <
AVAILABLE LIST: {length:   2  bytes:  3404}                            <
  [  0] head @ 0x61200000015c {state: a  size:    76}                  <
  [  1] head @ 0x612000000328 {state: a  size:  3248}                  <
USED LIST: {length:   5  bytes:   692}                                 <
  [  0] head @ 0x612000000102 {state: u  size:    50}                  <
  [  1] head @ 0x6120000000a8 {state: u  size:    50}                  <
  [  2] head @ 0x6120000001d0 {state: u  size:    64}                  <
  [  3] head @ 0x612000000238 {state: u  size:   200}                  <
  [  4] head @ 0x612000000000 {state: u  size:   128}                  <
HEAP BLOCKS:                                                           <
[  0] @ 0x612000000000                                                 <
  state:      u                                                        <
  size:       128 (total: 0xa8)                                        <
  prev:       0x612000000238                                           <
  next:       0x610000000098                                           <
  user:       0x612000000020                                           <
  foot:       0x6120000000a0                                           <
  foot->size: 128                                                      <
[  1] @ 0x6120000000a8                                                 <
  state:      u                                                        <
  size:       50 (total: 0x5a)                                         <
  prev:       0x612000000102                                           <
  next:       0x6120000001d0                                           <
  user:       0x6120000000c8                                           <
  foot:       0x6120000000fa                                           <
  foot->size: 50                                                       <
[  2] @ 0x612000000102                                                 <
  state:      u                                                        <
  size:       50 (total: 0x5a)                                         <
  prev:       0x610000000078                                           <
  next:       0x6120000000a8                                           <
  user:       0x612000000122                                           <
  foot:       0x612000000154                                           <
  foot->size: 50                                                       <
[  3] @ 0x61200000015c                                                 <
  state:      a                                                        <
  size:       76 (total: 0x74)                                         <
  prev:       0x610000000018                                           <
  next:       0x612000000328                                           <
  user:       0x61200000017c                                           <
  foot:       0x6120000001c8                                           <
  foot->size: 76                                                       <
[  4] @ 0x6120000001d0                                                 <
  state:      u                                                        <
  size:       64 (total: 0x68)                                         <
  prev:       0x6120000000a8                                           <
  next:       0x612000000238                                           <
  user:       0x6120000001f0                                           <
  foot:       0x612000000230                                           <
  foot->size: 64                                                       <
[  5] @ 0x612000000238                                                 <
  state:      u                                                        <
  size:       200 (total: 0xf0)                                        <
  prev:       0x6120000001d0                                           <
  next:       0x612000000000                                           <
  user:       0x612000000258                                           <
  foot:       0x612000000320                                           <
  foot->size: 200                                                      <
[  6] @ 0x612000000328                                                 <
  state:      a                                                        <
  size:       3248 (total: 0xcd8)                                      <
  prev:       0x61200000015c                                           <
  next:       0x610000000038                                           <
  user:       0x612000000348                                           <
  foot:       0x612000000ff8                                           <
  foot->size: 3248                                                     <
                                                                       <
POINTERS                                                               <
ptr[ 0]: 0x612000000020                                                <
ptr[ 1]: (nil)                                                         <
ptr[ 2]: (nil)                                                         <
ptr[ 3]: 0x612000000258                                                <
ptr[ 4]: 0x6120000001f0                                                <
ptr[ 5]: 0x6120000000c8                                                <
ptr[ 6]: 0x612000000122                                                <
                                                                       <
MALLOC 8                                                               <
HEAP STATS (overhead per node: 40)                                     <
heap_start:  0x612000000000                                            <
heap_end:    0x612000001000                                            <
total_bytes: 4096                                                      <
AVAILABLE LIST: {length:   2  bytes:  3264}                            <
  [  0] head @ 0x6120000003b4 {state: a  size:  3108}                  <
  [  1] head @ 0x61200000015c {state: a  size:    76}                  <
USED LIST: {length:   6  bytes:   832}                                 <
  [  0] head @ 0x612000000328 {state: u  size:   100}                  <
  [  1] head @ 0x612000000102 {state: u  size:    50}                  <
  [  2] head @ 0x6120000000a8 {state: u  size:    50}                  <
  [  3] head @ 0x6120000001d0 {state: u  size:    64}                  <
  [  4] head @ 0x612000000238 {state: u  size:   200}                  <
  [  5] head @ 0x612000000000 {state: u  size:   128}                  <
HEAP BLOCKS:                                                           <
[  0] @ 0x612000000000                                                 <
  state:      u                                                        <
  size:       128 (total: 0xa8)                                        <
  prev:       0x612000000238                                           <
  next:       0x610000000098                                           <
  user:       0x612000000020                                           <
  foot:       0x6120000000a0                                           <
  foot->size: 128                                                      <
[  1] @ 0x6120000000a8                                                 <
  state:      u                                                        <
  size:       50 (total: 0x5a)                                         <
  prev:       0x612000000102                                           <
  next:       0x6120000001d0                                           <
  user:       0x6120000000c8                                           <
  foot:       0x6120000000fa                                           <
  foot->size: 50                                                       <
[  2] @ 0x612000000102                                                 <
  state:      u                                                        <
  size:       50 (total: 0x5a)                                         <
  prev:       0x612000000328                                           <
  next:       0x6120000000a8                                           <
  user:       0x612000000122                                           <
  foot:       0x612000000154                                           <
  foot->size: 50                                                       <
[  3] @ 0x61200000015c                                                 <
  state:      a                                                        <
  size:       76 (total: 0x74)                                         <
  prev:       0x6120000003b4                                           <
  next:       0x610000000038                                           <
  user:       0x61200000017c                                           <
  foot:       0x6120000001c8                                           <
  foot->size: 76                                                       <
[  4] @ 0x6120000001d0                                                 <
  state:      u                                                        <
  size:       64 (total: 0x68)                                         <
  prev:       0x6120000000a8                                           <
  next:       0x612000000238                                           <
  user:       0x6120000001f0                                           <
  foot:       0x612000000230                                           <
  foot->size: 64                                                       <
[  5] @ 0x612000000238                                                 <
  state:      u                                                        <
  size:       200 (total: 0xf0)                                        <
  prev:       0x6120000001d0                                           <
  next:       0x612000000000                                           <
  user:       0x612000000258                                           <
  foot:       0x612000000320                                           <
  foot->size: 200                                                      <
[  6] @ 0x612000000328                                                 <
  state:      u                                                        <
  size:       100 (total: 0x8c)                                        <
  prev:       0x610000000078                                           <
  next:       0x612000000102                                           <
  user:       0x612000000348                                           <
  foot:       0x6120000003ac                                           <
  foot->size: 100                                                      <
[  7] @ 0x6120000003b4                                                 <
  state:      a                                                        <
  size:       3108 (total: 0xc4c)                                      <
  prev:       0x610000000018                                           <
  next:       0x61200000015c                                           <
  user:       0x6120000003d4                                           <
  foot:       0x612000000ff8                                           <
  foot->size: 3108                                                     <
                                                                       <
POINTERS                                                               <
ptr[ 0]: 0x612000000020                                                <
ptr[ 1]: (nil)                                                         <
ptr[ 2]: (nil)                                                         <
ptr[ 3]: 0x612000000258                                                <
ptr[ 4]: 0x6120000001f0                                                <
ptr[ 5]: 0x6120000000c8                                                <
ptr[ 6]: 0x612000000122                                                <
ptr[ 7]: 0x612000000348                                                <
                                                                       <
FREE 5,0,6                                                             <
HEAP STATS (overhead per node: 40)                                     <
heap_start:  0x612000000000                                            <
heap_end:    0x612000001000                                            <
total_bytes: 4096                                                      <
AVAILABLE LIST: {length:   2  bytes:  3612}                            <
  [  0] head @ 0x612000000000 {state: a  size:   424}                  <
  [  1] head @ 0x6120000003b4 {state: a  size:  3108}                  <
USED LIST: {length:   3  bytes:   484}                                 <
  [  0] head @ 0x612000000328 {state: u  size:   100}                  <
  [  1] head @ 0x6120000001d0 {state: u  size:    64}                  <
  [  2] head @ 0x612000000238 {state: u  size:   200}                  <
HEAP BLOCKS:                                                           <
[  0] @ 0x612000000000                                                 <
  state:      a                                                        <
  size:       424 (total: 0x1d0)                                       <
  prev:       0x610000000018                                           <
  next:       0x6120000003b4                                           <
  user:       0x612000000020                                           <
  foot:       0x6120000001c8                                           <
  foot->size: 424                                                      <
[  1] @ 0x6120000001d0                                                 <
  state:      u                                                        <
  size:       64 (total: 0x68)                                         <
  prev:       0x612000000328                                           <
  next:       0x612000000238                                           <
  user:       0x6120000001f0                                           <
  foot:       0x612000000230                                           <
  foot->size: 64                                                       <
[  2] @ 0x612000000238                                                 <
  state:      u                                                        <
  size:       200 (total: 0xf0)                                        <
  prev:       0x6120000001d0                                           <
  next:       0x610000000098                                           <
  user:       0x612000000258                                           <
  foot:       0x612000000320                                           <
  foot->size: 200                                                      <
[  3] @ 0x612000000328                                                 <
  state:      u                                                        <
  size:       100 (total: 0x8c)                                        <
  prev:       0x610000000078                                           <
  next:       0x6120000001d0                                           <
  user:       0x612000000348                                           <
  foot:       0x6120000003ac                                           <
  foot->size: 100                                                      <
[  4] @ 0x6120000003b4                                                 <
  state:      a                                                        <
  size:       3108 (total: 0xc4c)                                      <
  prev:       0x612000000000                                           <
  next:       0x610000000038                                           <
  user:       0x6120000003d4                                           <
  foot:       0x612000000ff8                                           <
  foot->size: 3108                                                     <
                                                                       <
POINTERS                                                               <
ptr[ 0]: (nil)                                                         <
ptr[ 1]: (nil)                                                         <
ptr[ 2]: (nil)                                                         <
ptr[ 3]: 0x612000000258                                                <
ptr[ 4]: 0x6120000001f0                                                <
ptr[ 5]: (nil)                                                         <
ptr[ 6]: (nil)                                                         <
ptr[ 7]: 0x612000000348                                                <
                                                                       <
MALLOC 9,10,11                                                         <
HEAP STATS (overhead per node: 40)                                     <
heap_start:  0x612000000000                                            <
heap_end:    0x612000001000                                            <
total_bytes: 4096                                                      <
AVAILABLE LIST: {length:   2  bytes:  2692}                            <
  [  0] head @ 0x61200000065c {state: a  size:  2428}                  <
  [  1] head @ 0x6120000000f0 {state: a  size:   184}                  <
USED LIST: {length:   7  bytes:  1404}                                 <
  [  0] head @ 0x612000000614 {state: u  size:    32}                  <
  [  1] head @ 0x6120000005dc {state: u  size:    16}                  <
  [  2] head @ 0x6120000003b4 {state: u  size:   512}                  <
  [  3] head @ 0x612000000000 {state: u  size:   200}                  <
  [  4] head @ 0x612000000328 {state: u  size:   100}                  <
  [  5] head @ 0x6120000001d0 {state: u  size:    64}                  <
  [  6] head @ 0x612000000238 {state: u  size:   200}                  <
HEAP BLOCKS:                                                           <
[  0] @ 0x612000000000                                                 <
  state:      u                                                        <
  size:       200 (total: 0xf0)                                        <
  prev:       0x6120000003b4                                           <
  next:       0x612000000328                                           <
  user:       0x612000000020                                           <
  foot:       0x6120000000e8                                           <
  foot->size: 200                                                      <
[  1] @ 0x6120000000f0                                                 <
  state:      a                                                        <
  size:       184 (total: 0xe0)                                        <
  prev:       0x61200000065c                                           <
  next:       0x610000000038                                           <
  user:       0x612000000110                                           <
  foot:       0x6120000001c8                                           <
  foot->size: 184                                                      <
[  2] @ 0x6120000001d0                                                 <
  state:      u                                                        <
  size:       64 (total: 0x68)                                         <
  prev:       0x612000000328                                           <
  next:       0x612000000238                                           <
  user:       0x6120000001f0                                           <
  foot:       0x612000000230                                           <
  foot->size: 64                                                       <
[  3] @ 0x612000000238                                                 <
  state:      u                                                        <
  size:       200 (total: 0xf0)                                        <
  prev:       0x6120000001d0                                           <
  next:       0x610000000098                                           <
  user:       0x612000000258                                           <
  foot:       0x612000000320                                           <
  foot->size: 200                                                      <
[  4] @ 0x612000000328                                                 <
  state:      u                                                        <
  size:       100 (total: 0x8c)                                        <
  prev:       0x612000000000                                           <
  next:       0x6120000001d0                                           <
  user:       0x612000000348                                           <
  foot:       0x6120000003ac                                           <
  foot->size: 100                                                      <
[  5] @ 0x6120000003b4                                                 <
  state:      u                                                        <
  size:       512 (total: 0x228)                                       <
  prev:       0x6120000005dc                                           <
  next:       0x612000000000                                           <
  user:       0x6120000003d4                                           <
  foot:       0x6120000005d4                                           <
  foot->size: 512                                                      <
[  6] @ 0x6120000005dc                                                 <
  state:      u                                                        <
  size:       16 (total: 0x38)                                         <
  prev:       0x612000000614                                           <
  next:       0x6120000003b4                                           <
  user:       0x6120000005fc                                           <
  foot:       0x61200000060c                                           <
  foot->size: 16                                                       <
[  7] @ 0x612000000614                                                 <
  state:      u                                                        <
  size:       32 (total: 0x48)                                         <
  prev:       0x610000000078                                           <
  next:       0x6120000005dc                                           <
  user:       0x612000000634                                           <
  foot:       0x612000000654                                           <
  foot->size: 32                                                       <
[  8] @ 0x61200000065c                                                 <
  state:      a                                                        <
  size:       2428 (total: 0x9a4)                                      <
  prev:       0x610000000018                                           <
  next:       0x6120000000f0                                           <
  user:       0x61200000067c                                           <
  foot:       0x612000000ff8                                           <
  foot->size: 2428                                                     <
                                                                       <
POINTERS                                                               <
ptr[ 0]: (nil)                                                         <
ptr[ 1]: (nil)                                                         <
ptr[ 2]: (nil)                                                         <
ptr[ 3]: 0x612000000258                                                <
ptr[ 4]: 0x6120000001f0                                                <
ptr[ 5]: (nil)                                                         <
ptr[ 6]: (nil)                                                         <
ptr[ 7]: 0x612000000348                                                <
ptr[ 8]: 0x612000000020                                                <
ptr[ 9]: 0x6120000003d4                                                <
ptr[10]: 0x6120000005fc                                                <
ptr[11]: 0x612000000634                                                <
#+END_SRC

** --- Line Differences ---
EXPECT: 170) 
EXPECT: 171) MALLOC 5
EXPECT: 172) HEAP STATS (overhead per node: 40)
EXPECT: 173) heap_start:  0x612000000000
EXPECT: 174) heap_end:    0x612000001000
EXPECT: 175) total_bytes: 4096
EXPECT: 176) AVAILABLE LIST: {length:   1  bytes:  3288}
EXPECT: 177)   [  0] head @ 0x612000000328 {state: a  size:  3248}
EXPECT: 178) USED LIST: {length:   4  bytes:   808}
EXPECT: 179)   [  0] head @ 0x6120000001d0 {state: u  size:    64}
EXPECT: 180)   [  1] head @ 0x612000000238 {state: u  size:   200}
EXPECT: 181)   [  2] head @ 0x6120000000a8 {state: u  size:   256}
EXPECT: 182)   [  3] head @ 0x612000000000 {state: u  size:   128}
EXPECT: 183) HEAP BLOCKS:
EXPECT: 184) [  0] @ 0x612000000000
EXPECT: 185)   state:      u
EXPECT: 186)   size:       128 (total: 0xa8)
EXPECT: 187)   prev:       0x6120000000a8
EXPECT: 188)   next:       0x610000000098
EXPECT: 189)   user:       0x612000000020
EXPECT: 190)   foot:       0x6120000000a0
EXPECT: 191)   foot->size: 128
EXPECT: 192) [  1] @ 0x6120000000a8
EXPECT: 193)   state:      u
EXPECT: 194)   size:       256 (total: 0x128)
EXPECT: 195)   prev:       0x612000000238
EXPECT: 196)   next:       0x612000000000
EXPECT: 197)   user:       0x6120000000c8
EXPECT: 198)   foot:       0x6120000001c8
EXPECT: 199)   foot->size: 256
EXPECT: 200) [  2] @ 0x6120000001d0
EXPECT: 201)   state:      u
EXPECT: 202)   size:       64 (total: 0x68)
EXPECT: 203)   prev:       0x610000000078
EXPECT: 204)   next:       0x612000000238
EXPECT: 205)   user:       0x6120000001f0
EXPECT: 206)   foot:       0x612000000230
EXPECT: 207)   foot->size: 64
EXPECT: 208) [  3] @ 0x612000000238
EXPECT: 209)   state:      u
EXPECT: 210)   size:       200 (total: 0xf0)
EXPECT: 211)   prev:       0x6120000001d0
EXPECT: 212)   next:       0x6120000000a8
EXPECT: 213)   user:       0x612000000258
EXPECT: 214)   foot:       0x612000000320
EXPECT: 215)   foot->size: 200
EXPECT: 216) [  4] @ 0x612000000328
EXPECT: 217)   state:      a
EXPECT: 218)   size:       3248 (total: 0xcd8)
EXPECT: 219)   prev:       0x610000000018
EXPECT: 220)   next:       0x610000000038
EXPECT: 221)   user:       0x612000000348
EXPECT: 222)   foot:       0x612000000ff8
EXPECT: 223)   foot->size: 3248
EXPECT: 224) 
EXPECT: 225) POINTERS
EXPECT: 226) ptr[ 0]: 0x612000000020
EXPECT: 227) ptr[ 1]: 0x6120000000c8
EXPECT: 228) ptr[ 2]: (nil)
EXPECT: 229) ptr[ 3]: 0x612000000258
EXPECT: 230) ptr[ 4]: 0x6120000001f0
EXPECT: 231) 
EXPECT: 232) FREE 1
EXPECT: 233) HEAP STATS (overhead per node: 40)
EXPECT: 234) heap_start:  0x612000000000
EXPECT: 235) heap_end:    0x612000001000
EXPECT: 236) total_bytes: 4096
EXPECT: 237) AVAILABLE LIST: {length:   2  bytes:  3584}
EXPECT: 238)   [  0] head @ 0x6120000000a8 {state: a  size:   256}
EXPECT: 239)   [  1] head @ 0x612000000328 {state: a  size:  3248}
EXPECT: 240) USED LIST: {length:   3  bytes:   512}
EXPECT: 241)   [  0] head @ 0x6120000001d0 {state: u  size:    64}
EXPECT: 242)   [  1] head @ 0x612000000238 {state: u  size:   200}
EXPECT: 243)   [  2] head @ 0x612000000000 {state: u  size:   128}
EXPECT: 244) HEAP BLOCKS:
EXPECT: 245) [  0] @ 0x612000000000
EXPECT: 246)   state:      u
EXPECT: 247)   size:       128 (total: 0xa8)
EXPECT: 248)   prev:       0x612000000238
EXPECT: 249)   next:       0x610000000098
EXPECT: 250)   user:       0x612000000020
EXPECT: 251)   foot:       0x6120000000a0
EXPECT: 252)   foot->size: 128
EXPECT: 253) [  1] @ 0x6120000000a8
EXPECT: 254)   state:      a
EXPECT: 255)   size:       256 (total: 0x128)
EXPECT: 256)   prev:       0x610000000018
EXPECT: 257)   next:       0x612000000328
EXPECT: 258)   user:       0x6120000000c8
EXPECT: 259)   foot:       0x6120000001c8
EXPECT: 260)   foot->size: 256
EXPECT: 261) [  2] @ 0x6120000001d0
EXPECT: 262)   state:      u
EXPECT: 263)   size:       64 (total: 0x68)
EXPECT: 264)   prev:       0x610000000078
EXPECT: 265)   next:       0x612000000238
EXPECT: 266)   user:       0x6120000001f0
EXPECT: 267)   foot:       0x612000000230
EXPECT: 268)   foot->size: 64
EXPECT: 269) [  3] @ 0x612000000238
EXPECT: 270)   state:      u
EXPECT: 271)   size:       200 (total: 0xf0)
EXPECT: 272)   prev:       0x6120000001d0
EXPECT: 273)   next:       0x612000000000
EXPECT: 274)   user:       0x612000000258
EXPECT: 275)   foot:       0x612000000320
EXPECT: 276)   foot->size: 200
EXPECT: 277) [  4] @ 0x612000000328
EXPECT: 278)   state:      a
EXPECT: 279)   size:       3248 (total: 0xcd8)
EXPECT: 280)   prev:       0x6120000000a8
EXPECT: 281)   next:       0x610000000038
EXPECT: 282)   user:       0x612000000348
EXPECT: 283)   foot:       0x612000000ff8
EXPECT: 284)   foot->size: 3248
EXPECT: 285) 
EXPECT: 286) POINTERS
EXPECT: 287) ptr[ 0]: 0x612000000020
EXPECT: 288) ptr[ 1]: (nil)
EXPECT: 289) ptr[ 2]: (nil)
EXPECT: 290) ptr[ 3]: 0x612000000258
EXPECT: 291) ptr[ 4]: 0x6120000001f0
EXPECT: 292) 
EXPECT: 293) MALLOC 6-7
EXPECT: 294) HEAP STATS (overhead per node: 40)
EXPECT: 295) heap_start:  0x612000000000
EXPECT: 296) heap_end:    0x612000001000
EXPECT: 297) total_bytes: 4096
EXPECT: 298) AVAILABLE LIST: {length:   2  bytes:  3404}
EXPECT: 299)   [  0] head @ 0x61200000015c {state: a  size:    76}
EXPECT: 300)   [  1] head @ 0x612000000328 {state: a  size:  3248}
EXPECT: 301) USED LIST: {length:   5  bytes:   692}
EXPECT: 302)   [  0] head @ 0x612000000102 {state: u  size:    50}
EXPECT: 303)   [  1] head @ 0x6120000000a8 {state: u  size:    50}
EXPECT: 304)   [  2] head @ 0x6120000001d0 {state: u  size:    64}
EXPECT: 305)   [  3] head @ 0x612000000238 {state: u  size:   200}
EXPECT: 306)   [  4] head @ 0x612000000000 {state: u  size:   128}
EXPECT: 307) HEAP BLOCKS:
EXPECT: 308) [  0] @ 0x612000000000
EXPECT: 309)   state:      u
EXPECT: 310)   size:       128 (total: 0xa8)
EXPECT: 311)   prev:       0x612000000238
EXPECT: 312)   next:       0x610000000098
EXPECT: 313)   user:       0x612000000020
EXPECT: 314)   foot:       0x6120000000a0
EXPECT: 315)   foot->size: 128
EXPECT: 316) [  1] @ 0x6120000000a8
EXPECT: 317)   state:      u
EXPECT: 318)   size:       50 (total: 0x5a)
EXPECT: 319)   prev:       0x612000000102
EXPECT: 320)   next:       0x6120000001d0
EXPECT: 321)   user:       0x6120000000c8
EXPECT: 322)   foot:       0x6120000000fa
EXPECT: 323)   foot->size: 50
EXPECT: 324) [  2] @ 0x612000000102
EXPECT: 325)   state:      u
EXPECT: 326)   size:       50 (total: 0x5a)
EXPECT: 327)   prev:       0x610000000078
EXPECT: 328)   next:       0x6120000000a8
EXPECT: 329)   user:       0x612000000122
EXPECT: 330)   foot:       0x612000000154
EXPECT: 331)   foot->size: 50
EXPECT: 332) [  3] @ 0x61200000015c
EXPECT: 333)   state:      a
EXPECT: 334)   size:       76 (total: 0x74)
EXPECT: 335)   prev:       0x610000000018
EXPECT: 336)   next:       0x612000000328
EXPECT: 337)   user:       0x61200000017c
EXPECT: 338)   foot:       0x6120000001c8
EXPECT: 339)   foot->size: 76
EXPECT: 340) [  4] @ 0x6120000001d0
EXPECT: 341)   state:      u
EXPECT: 342)   size:       64 (total: 0x68)
EXPECT: 343)   prev:       0x6120000000a8
EXPECT: 344)   next:       0x612000000238
EXPECT: 345)   user:       0x6120000001f0
EXPECT: 346)   foot:       0x612000000230
EXPECT: 347)   foot->size: 64
EXPECT: 348) [  5] @ 0x612000000238
EXPECT: 349)   state:      u
EXPECT: 350)   size:       200 (total: 0xf0)
EXPECT: 351)   prev:       0x6120000001d0
EXPECT: 352)   next:       0x612000000000
EXPECT: 353)   user:       0x612000000258
EXPECT: 354)   foot:       0x612000000320
EXPECT: 355)   foot->size: 200
EXPECT: 356) [  6] @ 0x612000000328
EXPECT: 357)   state:      a
EXPECT: 358)   size:       3248 (total: 0xcd8)
EXPECT: 359)   prev:       0x61200000015c
EXPECT: 360)   next:       0x610000000038
EXPECT: 361)   user:       0x612000000348
EXPECT: 362)   foot:       0x612000000ff8
EXPECT: 363)   foot->size: 3248
EXPECT: 364) 
EXPECT: 365) POINTERS
EXPECT: 366) ptr[ 0]: 0x612000000020
EXPECT: 367) ptr[ 1]: (nil)
EXPECT: 368) ptr[ 2]: (nil)
EXPECT: 369) ptr[ 3]: 0x612000000258
EXPECT: 370) ptr[ 4]: 0x6120000001f0
EXPECT: 371) ptr[ 5]: 0x6120000000c8
EXPECT: 372) ptr[ 6]: 0x612000000122
EXPECT: 373) 
EXPECT: 374) MALLOC 8
EXPECT: 375) HEAP STATS (overhead per node: 40)
EXPECT: 376) heap_start:  0x612000000000
EXPECT: 377) heap_end:    0x612000001000
EXPECT: 378) total_bytes: 4096
EXPECT: 379) AVAILABLE LIST: {length:   2  bytes:  3264}
EXPECT: 380)   [  0] head @ 0x6120000003b4 {state: a  size:  3108}
EXPECT: 381)   [  1] head @ 0x61200000015c {state: a  size:    76}
EXPECT: 382) USED LIST: {length:   6  bytes:   832}
EXPECT: 383)   [  0] head @ 0x612000000328 {state: u  size:   100}
EXPECT: 384)   [  1] head @ 0x612000000102 {state: u  size:    50}
EXPECT: 385)   [  2] head @ 0x6120000000a8 {state: u  size:    50}
EXPECT: 386)   [  3] head @ 0x6120000001d0 {state: u  size:    64}
EXPECT: 387)   [  4] head @ 0x612000000238 {state: u  size:   200}
EXPECT: 388)   [  5] head @ 0x612000000000 {state: u  size:   128}
EXPECT: 389) HEAP BLOCKS:
EXPECT: 390) [  0] @ 0x612000000000
EXPECT: 391)   state:      u
EXPECT: 392)   size:       128 (total: 0xa8)
EXPECT: 393)   prev:       0x612000000238
EXPECT: 394)   next:       0x610000000098
EXPECT: 395)   user:       0x612000000020
EXPECT: 396)   foot:       0x6120000000a0
EXPECT: 397)   foot->size: 128
EXPECT: 398) [  1] @ 0x6120000000a8
EXPECT: 399)   state:      u
EXPECT: 400)   size:       50 (total: 0x5a)
EXPECT: 401)   prev:       0x612000000102
EXPECT: 402)   next:       0x6120000001d0
EXPECT: 403)   user:       0x6120000000c8
EXPECT: 404)   foot:       0x6120000000fa
EXPECT: 405)   foot->size: 50
EXPECT: 406) [  2] @ 0x612000000102
EXPECT: 407)   state:      u
EXPECT: 408)   size:       50 (total: 0x5a)
EXPECT: 409)   prev:       0x612000000328
EXPECT: 410)   next:       0x6120000000a8
EXPECT: 411)   user:       0x612000000122
EXPECT: 412)   foot:       0x612000000154
EXPECT: 413)   foot->size: 50
EXPECT: 414) [  3] @ 0x61200000015c
EXPECT: 415)   state:      a
EXPECT: 416)   size:       76 (total: 0x74)
EXPECT: 417)   prev:       0x6120000003b4
EXPECT: 418)   next:       0x610000000038
EXPECT: 419)   user:       0x61200000017c
EXPECT: 420)   foot:       0x6120000001c8
EXPECT: 421)   foot->size: 76
EXPECT: 422) [  4] @ 0x6120000001d0
EXPECT: 423)   state:      u
EXPECT: 424)   size:       64 (total: 0x68)
EXPECT: 425)   prev:       0x6120000000a8
EXPECT: 426)   next:       0x612000000238
EXPECT: 427)   user:       0x6120000001f0
EXPECT: 428)   foot:       0x612000000230
EXPECT: 429)   foot->size: 64
EXPECT: 430) [  5] @ 0x612000000238
EXPECT: 431)   state:      u
EXPECT: 432)   size:       200 (total: 0xf0)
EXPECT: 433)   prev:       0x6120000001d0
EXPECT: 434)   next:       0x612000000000
EXPECT: 435)   user:       0x612000000258
EXPECT: 436)   foot:       0x612000000320
EXPECT: 437)   foot->size: 200
EXPECT: 438) [  6] @ 0x612000000328
EXPECT: 439)   state:      u
EXPECT: 440)   size:       100 (total: 0x8c)
EXPECT: 441)   prev:       0x610000000078
EXPECT: 442)   next:       0x612000000102
EXPECT: 443)   user:       0x612000000348
EXPECT: 444)   foot:       0x6120000003ac
EXPECT: 445)   foot->size: 100
EXPECT: 446) [  7] @ 0x6120000003b4
EXPECT: 447)   state:      a
EXPECT: 448)   size:       3108 (total: 0xc4c)
EXPECT: 449)   prev:       0x610000000018
EXPECT: 450)   next:       0x61200000015c
EXPECT: 451)   user:       0x6120000003d4
EXPECT: 452)   foot:       0x612000000ff8
EXPECT: 453)   foot->size: 3108
EXPECT: 454) 
EXPECT: 455) POINTERS
EXPECT: 456) ptr[ 0]: 0x612000000020
EXPECT: 457) ptr[ 1]: (nil)
EXPECT: 458) ptr[ 2]: (nil)
EXPECT: 459) ptr[ 3]: 0x612000000258
EXPECT: 460) ptr[ 4]: 0x6120000001f0
EXPECT: 461) ptr[ 5]: 0x6120000000c8
EXPECT: 462) ptr[ 6]: 0x612000000122
EXPECT: 463) ptr[ 7]: 0x612000000348
EXPECT: 464) 
EXPECT: 465) FREE 5,0,6
EXPECT: 466) HEAP STATS (overhead per node: 40)
EXPECT: 467) heap_start:  0x612000000000
EXPECT: 468) heap_end:    0x612000001000
EXPECT: 469) total_bytes: 4096
EXPECT: 470) AVAILABLE LIST: {length:   2  bytes:  3612}
EXPECT: 471)   [  0] head @ 0x612000000000 {state: a  size:   424}
EXPECT: 472)   [  1] head @ 0x6120000003b4 {state: a  size:  3108}
EXPECT: 473) USED LIST: {length:   3  bytes:   484}
EXPECT: 474)   [  0] head @ 0x612000000328 {state: u  size:   100}
EXPECT: 475)   [  1] head @ 0x6120000001d0 {state: u  size:    64}
EXPECT: 476)   [  2] head @ 0x612000000238 {state: u  size:   200}
EXPECT: 477) HEAP BLOCKS:
EXPECT: 478) [  0] @ 0x612000000000
EXPECT: 479)   state:      a
EXPECT: 480)   size:       424 (total: 0x1d0)
EXPECT: 481)   prev:       0x610000000018
EXPECT: 482)   next:       0x6120000003b4
EXPECT: 483)   user:       0x612000000020
EXPECT: 484)   foot:       0x6120000001c8
EXPECT: 485)   foot->size: 424
EXPECT: 486) [  1] @ 0x6120000001d0
EXPECT: 487)   state:      u
EXPECT: 488)   size:       64 (total: 0x68)
EXPECT: 489)   prev:       0x612000000328
EXPECT: 490)   next:       0x612000000238
EXPECT: 491)   user:       0x6120000001f0
EXPECT: 492)   foot:       0x612000000230
EXPECT: 493)   foot->size: 64
EXPECT: 494) [  2] @ 0x612000000238
EXPECT: 495)   state:      u
EXPECT: 496)   size:       200 (total: 0xf0)
EXPECT: 497)   prev:       0x6120000001d0
EXPECT: 498)   next:       0x610000000098
EXPECT: 499)   user:       0x612000000258
EXPECT: 500)   foot:       0x612000000320
EXPECT: 501)   foot->size: 200
EXPECT: 502) [  3] @ 0x612000000328
EXPECT: 503)   state:      u
EXPECT: 504)   size:       100 (total: 0x8c)
EXPECT: 505)   prev:       0x610000000078
EXPECT: 506)   next:       0x6120000001d0
EXPECT: 507)   user:       0x612000000348
EXPECT: 508)   foot:       0x6120000003ac
EXPECT: 509)   foot->size: 100
EXPECT: 510) [  4] @ 0x6120000003b4
EXPECT: 511)   state:      a
EXPECT: 512)   size:       3108 (total: 0xc4c)
EXPECT: 513)   prev:       0x612000000000
EXPECT: 514)   next:       0x610000000038
EXPECT: 515)   user:       0x6120000003d4
EXPECT: 516)   foot:       0x612000000ff8
EXPECT: 517)   foot->size: 3108
EXPECT: 518) 
EXPECT: 519) POINTERS
EXPECT: 520) ptr[ 0]: (nil)
EXPECT: 521) ptr[ 1]: (nil)
EXPECT: 522) ptr[ 2]: (nil)
EXPECT: 523) ptr[ 3]: 0x612000000258
EXPECT: 524) ptr[ 4]: 0x6120000001f0
EXPECT: 525) ptr[ 5]: (nil)
EXPECT: 526) ptr[ 6]: (nil)
EXPECT: 527) ptr[ 7]: 0x612000000348
EXPECT: 528) 
EXPECT: 529) MALLOC 9,10,11
EXPECT: 530) HEAP STATS (overhead per node: 40)
EXPECT: 531) heap_start:  0x612000000000
EXPECT: 532) heap_end:    0x612000001000
EXPECT: 533) total_bytes: 4096
EXPECT: 534) AVAILABLE LIST: {length:   2  bytes:  2692}
EXPECT: 535)   [  0] head @ 0x61200000065c {state: a  size:  2428}
EXPECT: 536)   [  1] head @ 0x6120000000f0 {state: a  size:   184}
EXPECT: 537) USED LIST: {length:   7  bytes:  1404}
EXPECT: 538)   [  0] head @ 0x612000000614 {state: u  size:    32}
EXPECT: 539)   [  1] head @ 0x6120000005dc {state: u  size:    16}
EXPECT: 540)   [  2] head @ 0x6120000003b4 {state: u  size:   512}
EXPECT: 541)   [  3] head @ 0x612000000000 {state: u  size:   200}
EXPECT: 542)   [  4] head @ 0x612000000328 {state: u  size:   100}
EXPECT: 543)   [  5] head @ 0x6120000001d0 {state: u  size:    64}
EXPECT: 544)   [  6] head @ 0x612000000238 {state: u  size:   200}
EXPECT: 545) HEAP BLOCKS:
EXPECT: 546) [  0] @ 0x612000000000
EXPECT: 547)   state:      u
EXPECT: 548)   size:       200 (total: 0xf0)
EXPECT: 549)   prev:       0x6120000003b4
EXPECT: 550)   next:       0x612000000328
EXPECT: 551)   user:       0x612000000020
EXPECT: 552)   foot:       0x6120000000e8
EXPECT: 553)   foot->size: 200
EXPECT: 554) [  1] @ 0x6120000000f0
EXPECT: 555)   state:      a
EXPECT: 556)   size:       184 (total: 0xe0)
EXPECT: 557)   prev:       0x61200000065c
EXPECT: 558)   next:       0x610000000038
EXPECT: 559)   user:       0x612000000110
EXPECT: 560)   foot:       0x6120000001c8
EXPECT: 561)   foot->size: 184
EXPECT: 562) [  2] @ 0x6120000001d0
EXPECT: 563)   state:      u
EXPECT: 564)   size:       64 (total: 0x68)
EXPECT: 565)   prev:       0x612000000328
EXPECT: 566)   next:       0x612000000238
EXPECT: 567)   user:       0x6120000001f0
EXPECT: 568)   foot:       0x612000000230
EXPECT: 569)   foot->size: 64
EXPECT: 570) [  3] @ 0x612000000238
EXPECT: 571)   state:      u
EXPECT: 572)   size:       200 (total: 0xf0)
EXPECT: 573)   prev:       0x6120000001d0
EXPECT: 574)   next:       0x610000000098
EXPECT: 575)   user:       0x612000000258
EXPECT: 576)   foot:       0x612000000320
EXPECT: 577)   foot->size: 200
EXPECT: 578) [  4] @ 0x612000000328
EXPECT: 579)   state:      u
EXPECT: 580)   size:       100 (total: 0x8c)
EXPECT: 581)   prev:       0x612000000000
EXPECT: 582)   next:       0x6120000001d0
EXPECT: 583)   user:       0x612000000348
EXPECT: 584)   foot:       0x6120000003ac
EXPECT: 585)   foot->size: 100
EXPECT: 586) [  5] @ 0x6120000003b4
EXPECT: 587)   state:      u
EXPECT: 588)   size:       512 (total: 0x228)
EXPECT: 589)   prev:       0x6120000005dc
EXPECT: 590)   next:       0x612000000000
EXPECT: 591)   user:       0x6120000003d4
EXPECT: 592)   foot:       0x6120000005d4
EXPECT: 593)   foot->size: 512
EXPECT: 594) [  6] @ 0x6120000005dc
EXPECT: 595)   state:      u
EXPECT: 596)   size:       16 (total: 0x38)
EXPECT: 597)   prev:       0x612000000614
EXPECT: 598)   next:       0x6120000003b4
EXPECT: 599)   user:       0x6120000005fc
EXPECT: 600)   foot:       0x61200000060c
EXPECT: 601)   foot->size: 16
EXPECT: 602) [  7] @ 0x612000000614
EXPECT: 603)   state:      u
EXPECT: 604)   size:       32 (total: 0x48)
EXPECT: 605)   prev:       0x610000000078
EXPECT: 606)   next:       0x6120000005dc
EXPECT: 607)   user:       0x612000000634
EXPECT: 608)   foot:       0x612000000654
EXPECT: 609)   foot->size: 32
EXPECT: 610) [  8] @ 0x61200000065c
EXPECT: 611)   state:      a
EXPECT: 612)   size:       2428 (total: 0x9a4)
EXPECT: 613)   prev:       0x610000000018
EXPECT: 614)   next:       0x6120000000f0
EXPECT: 615)   user:       0x61200000067c
EXPECT: 616)   foot:       0x612000000ff8
EXPECT: 617)   foot->size: 2428
EXPECT: 618) 
EXPECT: 619) POINTERS
EXPECT: 620) ptr[ 0]: (nil)
EXPECT: 621) ptr[ 1]: (nil)
EXPECT: 622) ptr[ 2]: (nil)
EXPECT: 623) ptr[ 3]: 0x612000000258
EXPECT: 624) ptr[ 4]: 0x6120000001f0
EXPECT: 625) ptr[ 5]: (nil)
EXPECT: 626) ptr[ 6]: (nil)
EXPECT: 627) ptr[ 7]: 0x612000000348
EXPECT: 628) ptr[ 8]: 0x612000000020
EXPECT: 629) ptr[ 9]: 0x6120000003d4
EXPECT: 630) ptr[10]: 0x6120000005fc
EXPECT: 631) ptr[11]: 0x612000000634

--- Valgrind Log from: test-results/raw/el_malloc-10-valgrd.tmp ---
==2798013== Memcheck, a memory error detector
==2798013== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2798013== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2798013== Command: ./test_el_malloc Stress\ 1
==2798013== Parent PID: 2798012
==2798013== 
==2798013== Invalid write of size 8
==2798013==    at 0x10AE3E: el_add_block_front (el_malloc.c:258)
==2798013==    by 0x10AF8E: el_malloc (el_malloc.c:351)
==2798013==    by 0x10A3D9: main (test_el_malloc.c:374)
==2798013==  Address 0x18 is not stack'd, malloc'd or (recently) free'd
==2798013== 
==2798013== 
==2798013== Process terminating with default action of signal 11 (SIGSEGV)
==2798013==  Access not within mapped region at address 0x18
==2798013==    at 0x10AE3E: el_add_block_front (el_malloc.c:258)
==2798013==    by 0x10AF8E: el_malloc (el_malloc.c:351)
==2798013==    by 0x10A3D9: main (test_el_malloc.c:374)
==2798013==  If you believe this happened as a result of a stack
==2798013==  overflow in your program's main thread (unlikely but
==2798013==  possible), you can try to increase the size of the
==2798013==  main thread stack using the --main-stacksize= flag.
==2798013==  The main thread stack size used in this run was 8388608.
==2798013== 
==2798013== HEAP SUMMARY:
==2798013==     in use at exit: 0 bytes in 0 blocks
==2798013==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==2798013== 
==2798013== All heap blocks were freed -- no leaks are possible
==2798013== 
==2798013== For lists of detected and suppressed errors, rerun with: -s
==2798013== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

