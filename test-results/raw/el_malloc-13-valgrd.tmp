==2798218== Memcheck, a memory error detector
==2798218== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2798218== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2798218== Command: ./test_el_malloc Append\ Pages\ 3
==2798218== Parent PID: 2798217
==2798218== 
==2798218== Invalid read of size 8
==2798218==    at 0x10A9C4: el_print_blocklist (el_malloc.c:159)
==2798218==    by 0x10ABB0: el_print_stats (el_malloc.c:222)
==2798218==    by 0x10A84D: main (test_el_malloc.c:456)
==2798218==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2798218== 
==2798218== 
==2798218== Process terminating with default action of signal 11 (SIGSEGV)
==2798218==  Access not within mapped region at address 0x0
==2798218==    at 0x10A9C4: el_print_blocklist (el_malloc.c:159)
==2798218==    by 0x10ABB0: el_print_stats (el_malloc.c:222)
==2798218==    by 0x10A84D: main (test_el_malloc.c:456)
==2798218==  If you believe this happened as a result of a stack
==2798218==  overflow in your program's main thread (unlikely but
==2798218==  possible), you can try to increase the size of the
==2798218==  main thread stack using the --main-stacksize= flag.
==2798218==  The main thread stack size used in this run was 8388608.
==2798218== 
==2798218== HEAP SUMMARY:
==2798218==     in use at exit: 0 bytes in 0 blocks
==2798218==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==2798218== 
==2798218== All heap blocks were freed -- no leaks are possible
==2798218== 
==2798218== For lists of detected and suppressed errors, rerun with: -s
==2798218== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
