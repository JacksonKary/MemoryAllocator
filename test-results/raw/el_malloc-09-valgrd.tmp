==2797886== Memcheck, a memory error detector
==2797886== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2797886== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2797886== Command: ./test_el_malloc No\ Split
==2797886== Parent PID: 2797885
==2797886== 
==2797886== Invalid write of size 8
==2797886==    at 0x10AE3E: el_add_block_front (el_malloc.c:258)
==2797886==    by 0x10AF8E: el_malloc (el_malloc.c:351)
==2797886==    by 0x10A219: main (test_el_malloc.c:277)
==2797886==  Address 0x18 is not stack'd, malloc'd or (recently) free'd
==2797886== 
==2797886== 
==2797886== Process terminating with default action of signal 11 (SIGSEGV)
==2797886==  Access not within mapped region at address 0x18
==2797886==    at 0x10AE3E: el_add_block_front (el_malloc.c:258)
==2797886==    by 0x10AF8E: el_malloc (el_malloc.c:351)
==2797886==    by 0x10A219: main (test_el_malloc.c:277)
==2797886==  If you believe this happened as a result of a stack
==2797886==  overflow in your program's main thread (unlikely but
==2797886==  possible), you can try to increase the size of the
==2797886==  main thread stack using the --main-stacksize= flag.
==2797886==  The main thread stack size used in this run was 8388608.
==2797886== 
==2797886== HEAP SUMMARY:
==2797886==     in use at exit: 0 bytes in 0 blocks
==2797886==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==2797886== 
==2797886== All heap blocks were freed -- no leaks are possible
==2797886== 
==2797886== For lists of detected and suppressed errors, rerun with: -s
==2797886== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
