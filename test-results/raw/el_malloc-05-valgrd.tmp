==2797420== Memcheck, a memory error detector
==2797420== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2797420== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2797420== Command: ./test_el_malloc Four\ Allocs\ Free\ Ver1
==2797420== Parent PID: 2797419
==2797420== 
==2797420== Invalid read of size 8
==2797420==    at 0x10A8E2: el_get_footer (el_malloc.c:90)
==2797420==    by 0x10A9FC: el_print_block (el_malloc.c:200)
==2797420==    by 0x10ABF0: el_print_stats (el_malloc.c:228)
==2797420==    by 0x109C48: main (test_el_malloc.c:166)
==2797420==  Address 0x612000000ff9 is in a rw- anonymous segment
==2797420== 
==2797420== 
==2797420== Process terminating with default action of signal 11 (SIGSEGV)
==2797420==  Access not within mapped region at address 0x612000001000
==2797420==    at 0x10A8E2: el_get_footer (el_malloc.c:90)
==2797420==    by 0x10A9FC: el_print_block (el_malloc.c:200)
==2797420==    by 0x10ABF0: el_print_stats (el_malloc.c:228)
==2797420==    by 0x109C48: main (test_el_malloc.c:166)
==2797420==  If you believe this happened as a result of a stack
==2797420==  overflow in your program's main thread (unlikely but
==2797420==  possible), you can try to increase the size of the
==2797420==  main thread stack using the --main-stacksize= flag.
==2797420==  The main thread stack size used in this run was 8388608.
==2797420== 
==2797420== HEAP SUMMARY:
==2797420==     in use at exit: 0 bytes in 0 blocks
==2797420==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==2797420== 
==2797420== All heap blocks were freed -- no leaks are possible
==2797420== 
==2797420== For lists of detected and suppressed errors, rerun with: -s
==2797420== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
