{
    // Tests if el_append_pages_to_heap(1) works correctly. The heap
    // has 1 used block after malloc()'ing and no extra
    // space. Expanding by 1 page gives a new available block and a
    // larger heap size.
    int ret;
    ret = el_append_pages_to_heap(-1);
    printf("EXPANSION FAILS 1, ret: %d\n",ret);
    el_print_stats(); printf("\n");

    ret = el_append_pages_to_heap(1<<30);
    printf("EXPANSION FAILS 2, ret: %d\n",ret);
    el_print_stats(); printf("\n");

    void *conflict =   // intentionally block heap expansion
      mmap(el_ctl->heap_end, 4096,
           PROT_READ | PROT_WRITE,
           MAP_PRIVATE | MAP_ANONYMOUS,
           -1, 0);
    ret = el_append_pages_to_heap(3);
    printf("conflict: %p\n",conflict);
    printf("EXPANSION FAILS 3, ret: %d\n",ret);
    el_print_stats(); printf("\n");
}
ERROR: Unable to mmap() additional -1 pages
EXPANSION FAILS 1, ret: 1
HEAP STATS (overhead per node: 40)
heap_start:  0x612000000000
heap_end:    0x612000001000
total_bytes: 4096
AVAILABLE LIST: {length:   1  bytes:  4096}
  [  0] head @ 0x612000000000 {state: a  size:  4056}
USED LIST: {length:   0  bytes:     0}
HEAP BLOCKS:
[  0] @ 0x612000000000
  state:      a
  size:       4056 (total: 0x1000)
  prev:       0x610000000018
  next:       0x610000000038
  user:       0x612000000020
  foot:       0x612000000ff8
  foot->size: 4056

ERROR: Unable to mmap() additional 1073741824 pages
EXPANSION FAILS 2, ret: 1
HEAP STATS (overhead per node: 40)
heap_start:  0x612000000000
heap_end:    0x612000001000
total_bytes: 4096
AVAILABLE LIST: {length:   1  bytes:  4096}
  [  0] head @ 0x612000000000 {state: a  size:  4056}
USED LIST: {length:   0  bytes:     0}
HEAP BLOCKS:
[  0] @ 0x612000000000
  state:      a
  size:       4056 (total: 0x1000)
  prev:       0x610000000018
  next:       0x610000000038
  user:       0x612000000020
  foot:       0x612000000ff8
  foot->size: 4056

ERROR: Unable to mmap() additional 3 pages
conflict: 0x612000001000
EXPANSION FAILS 3, ret: 1
HEAP STATS (overhead per node: 40)
heap_start:  0x612000000000
heap_end:    0x612000001000
total_bytes: 4096
AVAILABLE LIST: {length:   1  bytes:  4096}
  [  0] head @ 0x612000000000 {state: a  size:  4056}
USED LIST: {length:   0  bytes:     0}
HEAP BLOCKS:
[  0] @ 0x612000000000
  state:      a
  size:       4056 (total: 0x1000)
  prev:       0x610000000018
  next:       0x610000000038
  user:       0x612000000020
  foot:       0x612000000ff8
  foot->size: 4056

